#include <bits/stdc++.h>
using namespace std;

int partition(vector<int> &v,int s,int e){
    if(s>e) return 0;
    //inplace cant take extra array
    int i=s-1;
    int j=s;
    int pivot=v[e];
    for( ;j<=e-1; ){
        //merge smaller element to region -1
        if(v[j]<=pivot){
            i=i+1;
            swap(v[i],v[j]);
        }
        //expand the larger region
        j++;
    }
    //place the pivot element at correct index
    swap(v[i+1],v[e]);
    return i+1;
}

void quickSort(vector<int> &v,int s,int e){
    //base case
    if(s>=e) return;
    // recursive case
    int p=partition(v,s,e);
    quickSort(v,s,p-1);
    quickSort(v,p+1,e);
    return;
}

int main() {
    int n;
    cin>>n;
    vector<int> v(100001);
    for(int i=0;i<n;i++) cin>>v[i];
    quickSort(v,0,n-1);
    for(int i=0;i<n;i++) cout<<v[i]<<" ";
}
