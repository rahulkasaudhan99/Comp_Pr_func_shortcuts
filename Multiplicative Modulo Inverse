//find Multiplicative Modulo Inverse
// (a*b)%m = 1
// here a and m are given we have to find b (MMI)
// it exists only if Gcd(a,m)==1
ll gcdExtended(ll a, ll b, ll &x, ll &y) { 
    //base case
    if (a == 0) 
    { 
      x = 0; 
      y = 1; 
      return b; 
    } 

    ll x1, y1; // To store results of recursive call 
    ll gcd = gcdExtended(b%a, a, x1, y1); 

    // Update x and y using results of recursive call
    //  
    x = y1 - (b/a) * x1; 
    y = x1; 

    return gcd; 
}
ll multModInv(ll a,ll m){
    //it exist only if GCD(a%m)=1
    ll x,y;
    if(gcdExtended(a,m,x,y)!=1) return -1;
    return (x+m)%m;
}
