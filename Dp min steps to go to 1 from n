#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int minsteps(int n, int dp[]){
    //base case
    if(n==1) return 0;
    //if a n is already computed
    if(dp[n]!=0) return dp[n];
    //recursive case compute only if dp[n] is not computed already
    int op1,op2,op3;
    op1=op2=op3=INT_MAX;
    if(n%3==0) op1=minsteps(n/3,dp)+1; 
    if(n%2==0) op2=minsteps(n/2,dp)+1;
    op3=minsteps(n-1,dp)+1; 
    int ans=min(min(op1,op2),op3);

    return dp[n]=ans;
}


int main() {
	int n;
    cin>>n;
    int dp[n+1]={0};
    cout<<minsteps(n,dp)<<endl;
	
	return 0;
}

